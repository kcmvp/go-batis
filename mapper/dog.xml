<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://github.com/kcmvp/go-batis/blob/master/gobatis-mapper.dtd">

<mapper namespace="Dog">

    <insert id="createDog">
        insert into Dog(name,age,price) values (#{name},#{age},#{price})
    </insert>

    <insert id="batchInsert">
        insert into Dog(name,age,price) values
        <foreach collection="#{dogList}" separator=",">
            (#{name},#{age},#{price})
        </foreach>
    </insert>

    <update id="updateDog" cacheKey="#{name}" cacheName="dogcache">
        update Dog
        <set>
            <if test="len(name) > 0">
                name = #{name},
            </if>
            <if test="age > 0">
                age = #{age},
            </if>
            <if test="price > 0">
                price = #{price},
            </if>
            updated_at = CURRENT_TIMESTAMP()
        </set>
        where id = #{id}
    </update>
    <select id="findDogByIdNoCacheName" cacheName="" cacheKey="#{id}">
        select *
        from Dog
        where id = #{id}
    </select>
    <select id="findDogById" cacheName="dogCache" cacheKey="#{id}">
        select *
        from Dog
        where id = #{id}
    </select>

    <select id="findDogByIdEscape" cacheName="dogCache" cacheKey="#{id}">
        select *
        from Dog
        where id &lt;= #{id}
        and price &gt;= 100
    </select>


    <select id="searchByExample">
        select count(1)
        from Dog
        <where>
            <if test="len(name) > 0">
                     AND name = #{name}
            </if>
            <if test="age > 0">
                and age = #{age}
            </if>
        </where>
    </select>

    <delete id="deleteDogById" cacheName="dogCache" cacheKey="#{id}">
        delete from dog where levy_serial_number = #{levySerialNumber}
    </delete>

    <!-- batch update begin -->
    <sql id="updateWeekDayPriceCase1">
        UPDATE T_WEEK_DAY_PRICE
        <set>
            <if test="price != null">
                PRICE = ${price},
            </if>
            UPDATED_AT = CURRENT_TIMESTAMP()
        </set>
        where PRICE_PLAN_ID = ${age}
        and NUM_OF_WEEK = ${id}
    </sql>


    <!-- batch update end -->
    <sql id="base">
       name, age, size
    </sql>

    <select id="selectByRef">
        SELECT <include refid="base"/> FROM UUC_COMPANY
        where id = #{id}
    </select>
    <select id="findMyDog">
        SELECT <include refid="base"/> FROM UUC_COMPANY
        <where>
            <if test="bo.source != null">
                and SOURCE = #{bo.source}
            </if>
            <if test="filterSources != null and filterSources.size >= 0">
                AND SOURCE in (<foreach collection="filterSources" item="item" index="index" separator=",">#{item}</foreach>)
            </if>
            <if test="bo.beginDate!= null">
                <![CDATA[AND UPDATED_AT >= #{bo.beginDate}]]>
            </if>
            <if test="bo.endDate!= null">
                <![CDATA[AND UPDATED_AT <= #{bo.endDate}]]>
            </if>
        </where>
        <if test="size != null and size > 0">
            LIMIT #{offset}, #{size}
        </if>
    </select>


    <select id="selectByRefNest">
        SELECT f.ID
        , f.PROCESS_KEY
        , f.PROCESS_NAME
        , f.MODULE_CODE
        , m.MODULE_NAME
        , f.NOTE
        , f.STATUS
        FROM UBPC_PROCESS_FILE f
        LEFT JOIN UBPC_MODULE m ON m.MODULE_CODE = f.MODULE_CODE
        <include refid="condition"></include>
    </select>

    <sql id="condition">
        <where>
            f.MODULE_CODE = #{id}
            <if test="len(name) > 0">
                AND (f.PROCESS_NAME LIKE CONCAT('%',#{name},'%') OR f.PROCESS_KEY LIKE CONCAT('%',#{name},'%'))
            </if>
            <if test="age > 0">
                AND f.age = #{age}
            </if>
        </where>
    </sql>

</mapper>
